# Generated by Django 3.1.4 on 2021-03-03 15:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MultipleChoiceQuestionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('one_time_only', models.BooleanField(default=True)),
                ('frequency_interval', models.IntegerField(blank=True, default=1440, help_text='Minutes between the next time the question is asked. (only fill-in for routine questions)', null=True)),
                ('multiple_choice1', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice2', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice3', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice4', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice5', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice6', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice7', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice8', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice9', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_choice10', models.CharField(blank=True, max_length=50, null=True)),
                ('include_other_field', models.BooleanField(default=False)),
                ('other_field_label', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('is_baseline', models.BooleanField(default=True, help_text='Is this section part of a baseline questionnaire?')),
                ('is_dependent_on_question', models.BooleanField(default=False, help_text='Is this section dependent on the answer to a specific question?')),
                ('dependent_question_answers', models.CharField(blank=True, help_text='Choose the answer(s) necessary for the dependent quesiton in order to show this question. Separate multiple acceptable answers with a comma.', max_length=20, null=True)),
                ('dependent_question', models.ForeignKey(blank=True, help_text='Choose the dependent question', null=True, on_delete=django.db.models.deletion.PROTECT, to='base.multiplechoicequestiontemplate')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('question_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.questionsection')),
            ],
        ),
        migrations.CreateModel(
            name='NumberQuestionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('one_time_only', models.BooleanField(default=True)),
                ('frequency_interval', models.IntegerField(blank=True, default=1440, help_text='Minutes between the next time the question is asked. (only fill-in for routine questions)', null=True)),
                ('view_as_range', models.BooleanField(default=False)),
                ('range_min', models.IntegerField(blank=True, null=True)),
                ('range_max', models.IntegerField(blank=True, null=True)),
                ('range_min_label', models.CharField(blank=True, max_length=50, null=True)),
                ('range_max_label', models.CharField(blank=True, max_length=50, null=True)),
                ('question_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.questiongroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NumberQuestionInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('answered', models.DateTimeField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.profile')),
                ('question_template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.numberquestiontemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='multiplechoicequestiontemplate',
            name='question_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.questiongroup'),
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestionInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('answered', models.DateTimeField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('other_value', models.CharField(blank=True, max_length=100, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.profile')),
                ('question_template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.multiplechoicequestiontemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FreeTextQuestionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('one_time_only', models.BooleanField(default=True)),
                ('frequency_interval', models.IntegerField(blank=True, default=1440, help_text='Minutes between the next time the question is asked. (only fill-in for routine questions)', null=True)),
                ('question_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.questiongroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FreeTextQuestionInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('answered', models.DateTimeField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.profile')),
                ('question_template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.freetextquestiontemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Emoji',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(choices=[('', '')], max_length=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.profile')),
            ],
        ),
    ]
